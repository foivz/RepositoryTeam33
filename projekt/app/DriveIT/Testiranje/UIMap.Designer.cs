// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Testiranje
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Test prijave u sustav, prvi unos krivo-krivo. Drugi unos admin-admin
        /// </summary>
        public void PrijavaTest()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIPrijavaWindow.UIItemWindow.UIItemEdit;
            WinEdit uILozinkaEdit = this.UIPrijavaWindow.UILozinkaWindow.UILozinkaEdit;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uILoginButton = this.UIPrijavaWindow.UILoginWindow.UILoginButton;
            #endregion

            // Type 'krivo' in text box
            uIItemEdit.Text = this.PrijavaTestParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.PrijavaTestParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Lozinka' text box
            Keyboard.SendKeys(uILozinkaEdit, this.PrijavaTestParams.UILozinkaEditSendKeys, true);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(43, 19));

            // Type 'admin' in text box
            uIItemEdit.Text = this.PrijavaTestParams.UIItemEditText1;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.PrijavaTestParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '********' in 'Lozinka' text box
            Keyboard.SendKeys(uILozinkaEdit, this.PrijavaTestParams.UILozinkaEditSendKeys1, true);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(107, 36));
        }
        
        /// <summary>
        /// DobavljaciTest - Use 'DobavljaciTestParams' to pass parameters into this method.
        /// </summary>
        public void DobavljaciTest()
        {
            #region Variable Declarations
            WinButton uIDobavljačiButton = this.UIDriveITWindow.UIDobavljačiWindow.UIDobavljačiButton;
            WinCell uIStjepanCell = this.UIDobavljačiWindow.UIDataGridView1Window.UIDataGridViewTable.UIRow0Row.UIStjepanCell;
            WinClient uIDobavljaciDetaljiClient = this.UIDobavljaciDetaljiWindow.UIDobavljaciDetaljiClient;
            WinButton uIOdustaniButton = this.UIDobavljaciDetaljiWindow.UIOdustaniWindow.UIOdustaniButton;
            WinButton uIDodajnovogdobavljačaButton = this.UIDobavljačiWindow.UIDodajnovogdobavljačaWindow.UIDodajnovogdobavljačaButton;
            WinEdit uIItemEdit = this.UIDodajdobavljačaWindow.UIItemWindow.UIItemEdit;
            WinClient uITxtAdresaClient = this.UIDodajdobavljačaWindow.UITxtAdresaWindow.UITxtAdresaClient;
            WinEdit uIItemEdit1 = this.UIDodajdobavljačaWindow.UIItemWindow1.UIItemEdit;
            WinClient uITxtTelefonClient = this.UIDodajdobavljačaWindow.UITxtTelefonWindow.UITxtTelefonClient;
            WinClient uITxtFaksClient = this.UIDodajdobavljačaWindow.UITxtFaksWindow.UITxtFaksClient;
            WinEdit uIItemEdit2 = this.UIDodajdobavljačaWindow.UIItemWindow2.UIItemEdit;
            WinClient uITxtEmailClient = this.UIDodajdobavljačaWindow.UITxtEmailWindow.UITxtEmailClient;
            WinEdit uIItemEdit3 = this.UIDodajdobavljačaWindow.UIItemWindow3.UIItemEdit;
            WinButton uIDodajButton = this.UIDodajdobavljačaWindow.UIDodajWindow.UIDodajButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uIOsvježiprikazButton = this.UIDobavljačiWindow.UIOsvježiprikazWindow.UIOsvježiprikazButton;
            WinCell uINullCell = this.UIDobavljačiWindow.UIDataGridView1Window.UIDataGridViewTable.UIRow4Row.UINullCell;
            WinEdit uIItemEdit4 = this.UIDobavljaciDetaljiWindow.UIAutokućaKraMarWindow.UIItemEdit;
            WinButton uIObrišiButton = this.UIDobavljaciDetaljiWindow.UIObrišiWindow.UIObrišiButton;
            WinButton uIIzlazButton = this.UIDobavljačiWindow.UIIzlazWindow.UIIzlazButton;
            #endregion

            // Click 'Dobavljači' button
            Mouse.Click(uIDobavljačiButton, new Point(106, 28));

            // Click 'Stjepan' cell
            Mouse.Click(uIStjepanCell, new Point(38, 13));

            // Click 'DobavljaciDetalji' client
            Mouse.Click(uIDobavljaciDetaljiClient, new Point(205, 186));

            // Click 'Odustani' button
            Mouse.Click(uIOdustaniButton, new Point(156, 44));

            // Click 'Odustani' button
            Mouse.Click(uIOdustaniButton, new Point(100, 65));

            // Click 'Dodaj novog dobavljača' button
            Mouse.Click(uIDodajnovogdobavljačaButton, new Point(129, 45));

            // Type 'Autokuća KraMar' in text box
            uIItemEdit.Text = this.DobavljaciTestParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.DobavljaciTestParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'txtAdresa' client
            Keyboard.SendKeys(uITxtAdresaClient, this.DobavljaciTestParams.UITxtAdresaClientSendKeys, ModifierKeys.None);

            // Type 'Ljubuški bb BiH' in text box
            uIItemEdit1.Text = this.DobavljaciTestParams.UIItemEditText1;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.DobavljaciTestParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in 'txtTelefon' client
            Keyboard.SendKeys(uITxtTelefonClient, this.DobavljaciTestParams.UITxtTelefonClientSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'txtFaks' client
            Keyboard.SendKeys(uITxtFaksClient, this.DobavljaciTestParams.UITxtFaksClientSendKeys, ModifierKeys.None);

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.DobavljaciTestParams.UIItemEditSendKeys2, ModifierKeys.None);

            // Type '{Tab}' in 'txtEmail' client
            Keyboard.SendKeys(uITxtEmailClient, this.DobavljaciTestParams.UITxtEmailClientSendKeys, ModifierKeys.None);

            // Type 'info' in text box
            uIItemEdit3.Text = this.DobavljaciTestParams.UIItemEditText2;

            // Type 'Alt, Control + v' in text box
            Keyboard.SendKeys(uIItemEdit3, this.DobavljaciTestParams.UIItemEditSendKeys3, (ModifierKeys.Alt | ModifierKeys.Control));

            // Type 'info@kramar.ba' in text box
            uIItemEdit3.Text = this.DobavljaciTestParams.UIItemEditText3;

            // Click 'Dodaj' button
            Mouse.Click(uIDodajButton, new Point(94, 61));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(36, 8));

            // Click 'Osvježi prikaz' button
            Mouse.Click(uIOsvježiprikazButton, new Point(112, 51));

            // Click '(null)' cell
            Mouse.Click(uINullCell, new Point(74, 7));

            // Click text box
            Mouse.Click(uIItemEdit4, new Point(161, 5));

            // Click 'Obriši' button
            Mouse.Click(uIObrišiButton, new Point(114, 51));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(17, 10));

            // Click 'Izlaz' button
            Mouse.Click(uIIzlazButton, new Point(52, 66));
        }
        
        #region Properties
        public virtual PrijavaTestParams PrijavaTestParams
        {
            get
            {
                if ((this.mPrijavaTestParams == null))
                {
                    this.mPrijavaTestParams = new PrijavaTestParams();
                }
                return this.mPrijavaTestParams;
            }
        }
        
        public virtual DobavljaciTestParams DobavljaciTestParams
        {
            get
            {
                if ((this.mDobavljaciTestParams == null))
                {
                    this.mDobavljaciTestParams = new DobavljaciTestParams();
                }
                return this.mDobavljaciTestParams;
            }
        }
        
        public UIPrijavaWindow UIPrijavaWindow
        {
            get
            {
                if ((this.mUIPrijavaWindow == null))
                {
                    this.mUIPrijavaWindow = new UIPrijavaWindow();
                }
                return this.mUIPrijavaWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIDriveITWindow UIDriveITWindow
        {
            get
            {
                if ((this.mUIDriveITWindow == null))
                {
                    this.mUIDriveITWindow = new UIDriveITWindow();
                }
                return this.mUIDriveITWindow;
            }
        }
        
        public UIDobavljačiWindow1 UIDobavljačiWindow
        {
            get
            {
                if ((this.mUIDobavljačiWindow == null))
                {
                    this.mUIDobavljačiWindow = new UIDobavljačiWindow1();
                }
                return this.mUIDobavljačiWindow;
            }
        }
        
        public UIDobavljaciDetaljiWindow UIDobavljaciDetaljiWindow
        {
            get
            {
                if ((this.mUIDobavljaciDetaljiWindow == null))
                {
                    this.mUIDobavljaciDetaljiWindow = new UIDobavljaciDetaljiWindow();
                }
                return this.mUIDobavljaciDetaljiWindow;
            }
        }
        
        public UIDodajdobavljačaWindow UIDodajdobavljačaWindow
        {
            get
            {
                if ((this.mUIDodajdobavljačaWindow == null))
                {
                    this.mUIDodajdobavljačaWindow = new UIDodajdobavljačaWindow();
                }
                return this.mUIDodajdobavljačaWindow;
            }
        }
        #endregion
        
        #region Fields
        private PrijavaTestParams mPrijavaTestParams;
        
        private DobavljaciTestParams mDobavljaciTestParams;
        
        private UIPrijavaWindow mUIPrijavaWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIDriveITWindow mUIDriveITWindow;
        
        private UIDobavljačiWindow1 mUIDobavljačiWindow;
        
        private UIDobavljaciDetaljiWindow mUIDobavljaciDetaljiWindow;
        
        private UIDodajdobavljačaWindow mUIDodajdobavljačaWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PrijavaTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class PrijavaTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'krivo' in text box
        /// </summary>
        public string UIItemEditText = "krivo";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Lozinka' text box
        /// </summary>
        public string UILozinkaEditSendKeys = "6ljeeNKCQGbiKL2gBeSIpZjZf+GgGccDuPuRC2ZIQFU=";
        
        /// <summary>
        /// Type 'admin' in text box
        /// </summary>
        public string UIItemEditText1 = "admin";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Lozinka' text box
        /// </summary>
        public string UILozinkaEditSendKeys1 = "euX4sCJh368ZqJJ3VFBGEQij0rqbhb8gcMgBUbIlCRgoZoCM3Zp7NGqdYfZBYsscDiW33v4QoCvP0h9aL" +
            "RSURtw9ifcdmBda";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DobavljaciTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class DobavljaciTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Autokuća KraMar' in text box
        /// </summary>
        public string UIItemEditText = "Autokuća KraMar";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'txtAdresa' client
        /// </summary>
        public string UITxtAdresaClientSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Ljubuški bb BiH' in text box
        /// </summary>
        public string UIItemEditText1 = "Ljubuški bb BiH";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'txtTelefon' client
        /// </summary>
        public string UITxtTelefonClientSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'txtFaks' client
        /// </summary>
        public string UITxtFaksClientSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'txtEmail' client
        /// </summary>
        public string UITxtEmailClientSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'info' in text box
        /// </summary>
        public string UIItemEditText2 = "info";
        
        /// <summary>
        /// Type 'Alt, Control + v' in text box
        /// </summary>
        public string UIItemEditSendKeys3 = "v";
        
        /// <summary>
        /// Type 'info@kramar.ba' in text box
        /// </summary>
        public string UIItemEditText3 = "info@kramar.ba";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIPrijavaWindow : WinWindow
    {
        
        public UIPrijavaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Prijava";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILozinkaWindow UILozinkaWindow
        {
            get
            {
                if ((this.mUILozinkaWindow == null))
                {
                    this.mUILozinkaWindow = new UILozinkaWindow(this);
                }
                return this.mUILozinkaWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow(this);
                }
                return this.mUILoginWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UILozinkaWindow mUILozinkaWindow;
        
        private UILoginWindow mUILoginWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILozinkaWindow : WinWindow
    {
        
        public UILozinkaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Lozinka";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinEdit UILozinkaEdit
        {
            get
            {
                if ((this.mUILozinkaEdit == null))
                {
                    this.mUILozinkaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILozinkaEdit.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUILozinkaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUILozinkaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLogin";
            this.WindowTitles.Add("Prijava");
            #endregion
        }
        
        #region Properties
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Prijava");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDriveITWindow : WinWindow
    {
        
        public UIDriveITWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "DriveIT";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("DriveIT");
            #endregion
        }
        
        #region Properties
        public UIDobavljačiWindow UIDobavljačiWindow
        {
            get
            {
                if ((this.mUIDobavljačiWindow == null))
                {
                    this.mUIDobavljačiWindow = new UIDobavljačiWindow(this);
                }
                return this.mUIDobavljačiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDobavljačiWindow mUIDobavljačiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDobavljačiWindow : WinWindow
    {
        
        public UIDobavljačiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDobavljaci";
            this.WindowTitles.Add("DriveIT");
            #endregion
        }
        
        #region Properties
        public WinButton UIDobavljačiButton
        {
            get
            {
                if ((this.mUIDobavljačiButton == null))
                {
                    this.mUIDobavljačiButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDobavljačiButton.SearchProperties[WinButton.PropertyNames.Name] = "Dobavljači";
                    this.mUIDobavljačiButton.WindowTitles.Add("DriveIT");
                    #endregion
                }
                return this.mUIDobavljačiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDobavljačiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDobavljačiWindow1 : WinWindow
    {
        
        public UIDobavljačiWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dobavljači";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public UIDataGridView1Window UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        
        public UIDodajnovogdobavljačaWindow UIDodajnovogdobavljačaWindow
        {
            get
            {
                if ((this.mUIDodajnovogdobavljačaWindow == null))
                {
                    this.mUIDodajnovogdobavljačaWindow = new UIDodajnovogdobavljačaWindow(this);
                }
                return this.mUIDodajnovogdobavljačaWindow;
            }
        }
        
        public UIOsvježiprikazWindow UIOsvježiprikazWindow
        {
            get
            {
                if ((this.mUIOsvježiprikazWindow == null))
                {
                    this.mUIOsvježiprikazWindow = new UIOsvježiprikazWindow(this);
                }
                return this.mUIOsvježiprikazWindow;
            }
        }
        
        public UIIzlazWindow UIIzlazWindow
        {
            get
            {
                if ((this.mUIIzlazWindow == null))
                {
                    this.mUIIzlazWindow = new UIIzlazWindow(this);
                }
                return this.mUIIzlazWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridView1Window mUIDataGridView1Window;
        
        private UIDodajnovogdobavljačaWindow mUIDodajnovogdobavljačaWindow;
        
        private UIOsvježiprikazWindow mUIOsvježiprikazWindow;
        
        private UIIzlazWindow mUIIzlazWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDataGridView1Window : WinWindow
    {
        
        public UIDataGridView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        
        public UIRow4Row UIRow4Row
        {
            get
            {
                if ((this.mUIRow4Row == null))
                {
                    this.mUIRow4Row = new UIRow4Row(this);
                }
                return this.mUIRow4Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        
        private UIRow4Row mUIRow4Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";Stjepan;Radić;Autodjelovi Radić d.d;Varaždin, Hr;00385982222222;(null);sradic@gm" +
                        "ail.com", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public WinCell UIStjepanCell
        {
            get
            {
                if ((this.mUIStjepanCell == null))
                {
                    this.mUIStjepanCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIStjepanCell.SearchProperties[WinCell.PropertyNames.Value] = "Stjepan";
                    this.mUIStjepanCell.WindowTitles.Add("Dobavljači");
                    #endregion
                }
                return this.mUIStjepanCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIStjepanCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIRow4Row : WinRow
    {
        
        public UIRow4Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";(null);(null);Autokuća KraMar;Ljubuški bb BiH;0038739833333;(null);info@kramar.b" +
                        "a", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public WinCell UINullCell
        {
            get
            {
                if ((this.mUINullCell == null))
                {
                    this.mUINullCell = new WinCell(this);
                    #region Search Criteria
                    this.mUINullCell.SearchProperties[WinCell.PropertyNames.Value] = "(null)";
                    this.mUINullCell.SearchProperties[WinCell.PropertyNames.Instance] = "2";
                    this.mUINullCell.WindowTitles.Add("Dobavljači");
                    #endregion
                }
                return this.mUINullCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUINullCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDodajnovogdobavljačaWindow : WinWindow
    {
        
        public UIDodajnovogdobavljačaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDodajDobavljaca";
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public WinButton UIDodajnovogdobavljačaButton
        {
            get
            {
                if ((this.mUIDodajnovogdobavljačaButton == null))
                {
                    this.mUIDodajnovogdobavljačaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDodajnovogdobavljačaButton.SearchProperties[WinButton.PropertyNames.Name] = "Dodaj novog dobavljača";
                    this.mUIDodajnovogdobavljačaButton.WindowTitles.Add("Dobavljači");
                    #endregion
                }
                return this.mUIDodajnovogdobavljačaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDodajnovogdobavljačaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIOsvježiprikazWindow : WinWindow
    {
        
        public UIOsvježiprikazWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOsvjezi";
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public WinButton UIOsvježiprikazButton
        {
            get
            {
                if ((this.mUIOsvježiprikazButton == null))
                {
                    this.mUIOsvježiprikazButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOsvježiprikazButton.SearchProperties[WinButton.PropertyNames.Name] = "Osvježi prikaz";
                    this.mUIOsvježiprikazButton.WindowTitles.Add("Dobavljači");
                    #endregion
                }
                return this.mUIOsvježiprikazButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOsvježiprikazButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIIzlazWindow : WinWindow
    {
        
        public UIIzlazWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "metroButton2";
            this.WindowTitles.Add("Dobavljači");
            #endregion
        }
        
        #region Properties
        public WinButton UIIzlazButton
        {
            get
            {
                if ((this.mUIIzlazButton == null))
                {
                    this.mUIIzlazButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIIzlazButton.SearchProperties[WinButton.PropertyNames.Name] = "Izlaz";
                    this.mUIIzlazButton.WindowTitles.Add("Dobavljači");
                    #endregion
                }
                return this.mUIIzlazButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIIzlazButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDobavljaciDetaljiWindow : WinWindow
    {
        
        public UIDobavljaciDetaljiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "DobavljaciDetalji";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("DobavljaciDetalji");
            #endregion
        }
        
        #region Properties
        public WinClient UIDobavljaciDetaljiClient
        {
            get
            {
                if ((this.mUIDobavljaciDetaljiClient == null))
                {
                    this.mUIDobavljaciDetaljiClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDobavljaciDetaljiClient.SearchProperties[WinControl.PropertyNames.Name] = "DobavljaciDetalji";
                    this.mUIDobavljaciDetaljiClient.WindowTitles.Add("DobavljaciDetalji");
                    #endregion
                }
                return this.mUIDobavljaciDetaljiClient;
            }
        }
        
        public UIOdustaniWindow UIOdustaniWindow
        {
            get
            {
                if ((this.mUIOdustaniWindow == null))
                {
                    this.mUIOdustaniWindow = new UIOdustaniWindow(this);
                }
                return this.mUIOdustaniWindow;
            }
        }
        
        public UIAutokućaKraMarWindow UIAutokućaKraMarWindow
        {
            get
            {
                if ((this.mUIAutokućaKraMarWindow == null))
                {
                    this.mUIAutokućaKraMarWindow = new UIAutokućaKraMarWindow(this);
                }
                return this.mUIAutokućaKraMarWindow;
            }
        }
        
        public UIObrišiWindow UIObrišiWindow
        {
            get
            {
                if ((this.mUIObrišiWindow == null))
                {
                    this.mUIObrišiWindow = new UIObrišiWindow(this);
                }
                return this.mUIObrišiWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDobavljaciDetaljiClient;
        
        private UIOdustaniWindow mUIOdustaniWindow;
        
        private UIAutokućaKraMarWindow mUIAutokućaKraMarWindow;
        
        private UIObrišiWindow mUIObrišiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIOdustaniWindow : WinWindow
    {
        
        public UIOdustaniWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOdustani";
            this.WindowTitles.Add("DobavljaciDetalji");
            #endregion
        }
        
        #region Properties
        public WinButton UIOdustaniButton
        {
            get
            {
                if ((this.mUIOdustaniButton == null))
                {
                    this.mUIOdustaniButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOdustaniButton.SearchProperties[WinButton.PropertyNames.Name] = "Odustani";
                    this.mUIOdustaniButton.WindowTitles.Add("DobavljaciDetalji");
                    #endregion
                }
                return this.mUIOdustaniButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOdustaniButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIAutokućaKraMarWindow : WinWindow
    {
        
        public UIAutokućaKraMarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Autokuća KraMar";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("DobavljaciDetalji");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("DobavljaciDetalji");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIObrišiWindow : WinWindow
    {
        
        public UIObrišiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnObrisi";
            this.WindowTitles.Add("DobavljaciDetalji");
            #endregion
        }
        
        #region Properties
        public WinButton UIObrišiButton
        {
            get
            {
                if ((this.mUIObrišiButton == null))
                {
                    this.mUIObrišiButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIObrišiButton.SearchProperties[WinButton.PropertyNames.Name] = "Obriši";
                    this.mUIObrišiButton.WindowTitles.Add("DobavljaciDetalji");
                    #endregion
                }
                return this.mUIObrišiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIObrišiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDodajdobavljačaWindow : WinWindow
    {
        
        public UIDodajdobavljačaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dodaj dobavljača";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITxtAdresaWindow UITxtAdresaWindow
        {
            get
            {
                if ((this.mUITxtAdresaWindow == null))
                {
                    this.mUITxtAdresaWindow = new UITxtAdresaWindow(this);
                }
                return this.mUITxtAdresaWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UITxtTelefonWindow UITxtTelefonWindow
        {
            get
            {
                if ((this.mUITxtTelefonWindow == null))
                {
                    this.mUITxtTelefonWindow = new UITxtTelefonWindow(this);
                }
                return this.mUITxtTelefonWindow;
            }
        }
        
        public UITxtFaksWindow UITxtFaksWindow
        {
            get
            {
                if ((this.mUITxtFaksWindow == null))
                {
                    this.mUITxtFaksWindow = new UITxtFaksWindow(this);
                }
                return this.mUITxtFaksWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UITxtEmailWindow UITxtEmailWindow
        {
            get
            {
                if ((this.mUITxtEmailWindow == null))
                {
                    this.mUITxtEmailWindow = new UITxtEmailWindow(this);
                }
                return this.mUITxtEmailWindow;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIDodajWindow UIDodajWindow
        {
            get
            {
                if ((this.mUIDodajWindow == null))
                {
                    this.mUIDodajWindow = new UIDodajWindow(this);
                }
                return this.mUIDodajWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UITxtAdresaWindow mUITxtAdresaWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UITxtTelefonWindow mUITxtTelefonWindow;
        
        private UITxtFaksWindow mUITxtFaksWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UITxtEmailWindow mUITxtEmailWindow;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIDodajWindow mUIDodajWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITxtAdresaWindow : WinWindow
    {
        
        public UITxtAdresaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAdresa";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinClient UITxtAdresaClient
        {
            get
            {
                if ((this.mUITxtAdresaClient == null))
                {
                    this.mUITxtAdresaClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITxtAdresaClient.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUITxtAdresaClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITxtAdresaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITxtTelefonWindow : WinWindow
    {
        
        public UITxtTelefonWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTelefon";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinClient UITxtTelefonClient
        {
            get
            {
                if ((this.mUITxtTelefonClient == null))
                {
                    this.mUITxtTelefonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITxtTelefonClient.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUITxtTelefonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITxtTelefonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITxtFaksWindow : WinWindow
    {
        
        public UITxtFaksWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtFaks";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinClient UITxtFaksClient
        {
            get
            {
                if ((this.mUITxtFaksClient == null))
                {
                    this.mUITxtFaksClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITxtFaksClient.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUITxtFaksClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITxtFaksClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UITxtEmailWindow : WinWindow
    {
        
        public UITxtEmailWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtEmail";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinClient UITxtEmailClient
        {
            get
            {
                if ((this.mUITxtEmailClient == null))
                {
                    this.mUITxtEmailClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITxtEmailClient.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUITxtEmailClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITxtEmailClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIDodajWindow : WinWindow
    {
        
        public UIDodajWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDodajDobavljaca";
            this.WindowTitles.Add("Dodaj dobavljača");
            #endregion
        }
        
        #region Properties
        public WinButton UIDodajButton
        {
            get
            {
                if ((this.mUIDodajButton == null))
                {
                    this.mUIDodajButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDodajButton.SearchProperties[WinButton.PropertyNames.Name] = "Dodaj ";
                    this.mUIDodajButton.WindowTitles.Add("Dodaj dobavljača");
                    #endregion
                }
                return this.mUIDodajButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDodajButton;
        #endregion
    }
}
